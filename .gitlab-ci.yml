image: docker:19

include:
  - template: Dependency-Scanning.gitlab-ci.yml

stages:
  - Build image
  - Push to registries

services:
  - docker:dind

build image:
  stage: Build image
  script:
    - version=$(cat version.env)
    - echo $version
    - docker build -t nikasproject/server:stable -t docker.pkg.github.com/nikas-project/server/server:latest -t $CI_REGISTRY/nikas-project/server:latest .
    - mkdir image
    - docker save nikasproject/server:stable > image/dockerhub.tar
    - docker save docker.pkg.github.com/nikas-project/server/server:latest > image/github.tar
    - docker save $CI_REGISTRY/nikas-project/server:latest > image/gitlab.tar
  artifacts:
    expire_in: 15 mins
    paths:
      - image

push to dockerhub:
  stage: Push to registries
  only:
    - master
  script:
    - docker load -i image/dockerhub.tar
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
    - docker push nikasproject/server:stable

push to github:
  stage: Push to registries
  only:
    - master
  script:
    - docker load -i image/github.tar
    - docker login -u "$DOCKERHUB_USERNAME" -p "$GITHUB_TOKEN" docker.pkg.github.com
    - docker push docker.pkg.github.com/nikas-project/server/server:latest

push to gitlab:
  stage: Push to registries
  only:
    - master
  script:
    - docker load -i image/gitlab.tar
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/nikas-project/server:latest

dependency_scanning:
  stage: Build image
  variables:
    DS_REMEDIATE: "false"
    DS_PYTHON_VERSION: 3
    PIP_REQUIREMENTS_FILE: "requirements.txt"