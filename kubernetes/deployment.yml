apiVersion: apps/v1
kind: Deployment
metadata:
  name: nikas
  labels:
    app: nikas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nikas
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nikas
        name: nikas
    spec:
      containers:
        - name: nikas
          image: nikasproject/server:2.1.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          resources:
            limits: &a1
              cpu: "0.2"
              ephemeral-storage: 0.5G
              memory: 0.2G
            requests: *a1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: nikas-db
              mountPath: /db/
            - name: nikas-config
              mountPath: /config/
          env:
            - name: GID
              value: "1000"
            - name: UID
              value: "1000"
          readinessProbe:
            httpGet:
              path: /admin
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: nikas-db
          persistentVolumeClaim:
            claimName: nikas-db
        - name: nikas-config
          configMap:
            name: nikas-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nikas-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nikas-config
data:
  nikas.conf: |
    [general]
    dbpath = /db/comments.db
    host = https://example.ir
    gravatar = true

    [moderation]
    enabled =
    purge-after =

    [server]
    listen = http://0.0.0.0:8080/
    public-endpoint = https://nikas.domain.ir

    [guard]
    enabled =
    ratelimit =

    [hash]
    salt =
    algorithm =

    [admin]
    enabled =
    password =
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: nikas-domain
spec:
  host: nikas.domain.ir
  port:
    targetPort: http
  tls:
    insecureEdgeTerminationPolicy: Allow
    termination: edge
  to:
    kind: Service
    name: nikas
    weight: 100
  wildcardPolicy: None
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nikas
  name: nikas
spec:
  ports:
    - name: http
      protocol: TCP
      targetPort: http
      port: 80
  selector:
    app: nikas
  type: ClusterIP
