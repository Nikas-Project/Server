name: Deploy

on:
  workflow_run:
    workflows: [ "Tests" ]
    branches: [ master ]
    types: 
      - completed

env:
  IMAGE_NAME: nikasproject/server
  GITHUB_IMAGE_NAME: docker.pkg.github.com/nikas-project/server/server

jobs:
  PyPi:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-utils libsqlite0 libxml2-utils sqlite openssl ca-certificates tini
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    
    - name: Deploy to test server
      run: |
        python setup.py sdist bdist_wheel
        TWINE_PASSWORD=${{ secrets.PYPI_TEST_TOKEN }} TWINE_USERNAME=__token__ python -m twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*
    
    - name: Deploy
      run: |
        python setup.py sdist bdist_wheel
        TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }} TWINE_USERNAME=__token__ python -m twine upload --skip-existing dist/*
  
  Docker:
    needs: PyPi
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Get version
      id: get_version
      run: |
        echo "::set-output name=version::$(cat version.env)"

    - name: Build image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version}} -t ${{ env.IMAGE_NAME }}:${{ github.sha }} -t ${{ env.GITHUB_IMAGE_NAME }}:${{ steps.get_version.outputs.version }} .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ env.IMAGE_NAME }}:${{ github.sha }}"
        exit-code: "0"
        ignore-unfixed: true
        vuln-type: "os,library"
        severity: "CRITICAL,HIGH"
        format: "template"
        template: "@/contrib/sarif.tpl"
        output: "trivy-results.sarif"

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: "trivy-results.sarif"

    - name: Push to Dockerhub
      run: |   
        docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
        docker push ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
    
    - name: Push to Github
      run: |   
        docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.GITHUB_TOKEN }}" docker.pkg.github.com
        docker push ${{ env.GITHUB_IMAGE_NAME }}:${{ steps.get_version.outputs.version }}